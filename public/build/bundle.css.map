{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Clock.svelte",
    "../../Offsets.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Clock from \"./components/Clock.svelte\";\n  import Offsets from \"./components/Offsets.svelte\";\n\n  let displaySettings = false;\n</script>\n\n<main>\n  <div\n    class=\"holder\"\n    on:click={() => {\n      displaySettings = !displaySettings;\n    }}\n  >\n    <Clock bigScale={!displaySettings} />\n  </div>\n  {#if displaySettings}\n    <Offsets />\n  {/if}\n</main>\n\n<style>\n  :global(body) {\n    color: white;\n    background-color: black;\n  }\n  main {\n    text-align: center;\n    margin: 0 auto;\n    overflow: hidden;\n    user-select: none;\n  }\n</style>\n",
    "<script>\n  import dayjs from \"dayjs\";\n  import {\n    hourOffset,\n    minOffset,\n    secOffset,\n    frameOffset,\n  } from \"../store/offset\";\n\n  export let interval = 100;\n  export let bigScale = true;\n\n  let timecodeString = \"00:00:00:00\";\n\n  window.hotkey.receive((e) => {\n    window.hotkey.send(timecodeString);\n  });\n\n  const displayWithLeadingZero = (input) => {\n    return input < 10 ? `0${input}` : input;\n  };\n\n  const updateClock = () => {\n    let time = dayjs();\n    time = time.add($hourOffset, \"h\");\n    time = time.add($minOffset, \"m\");\n    time = time.add($secOffset, \"s\");\n    time = time.add($frameOffset * 40, \"ms\");\n\n    timecodeString =\n      time.format(\"HH:mm:ss\") +\n      \":\" +\n      displayWithLeadingZero(Math.floor(time.format(\"SSS\") / 40));\n  };\n\n  setInterval(updateClock, interval);\n</script>\n\n<h1 style={bigScale ? \"font-size: 4em\" : \"font-size: 1em\"}>\n  {timecodeString}\n</h1>\n\n<style>\n  @font-face {\n    font-family: Roboto-Mono;\n    src: url(\"../fonts/RobotoMono-VariableFont_wght.ttf\");\n  }\n  h1 {\n    margin: 10px auto;\n    font-family: \"Roboto-Mono\", monospace;\n  }\n</style>\n",
    "<script>\n  import {\n    hourOffset,\n    minOffset,\n    secOffset,\n    frameOffset,\n  } from \"../store/offset\";\n\n  hourOffset.subscribe((n) => {\n    localStorage.setItem(\"hourOffset\", n);\n  });\n  minOffset.subscribe((n) => {\n    localStorage.setItem(\"minOffset\", n);\n  });\n  secOffset.subscribe((n) => {\n    localStorage.setItem(\"secOffset\", n);\n  });\n  frameOffset.subscribe((n) => {\n    localStorage.setItem(\"frameOffset\", n);\n  });\n</script>\n\n<div>\n  <div class=\"inputHolder\">\n    <div\n      class=\"number\"\n      tabindex=\"0\"\n      on:keydown={(k, e) => {\n        if (k.key == \"ArrowUp\") {\n          hourOffset.set($hourOffset + 1);\n        }\n        if (k.key == \"ArrowDown\") {\n          hourOffset.set($hourOffset - 1);\n        }\n      }}\n    >\n      {$hourOffset}\n    </div>\n    <div\n      class=\"number\"\n      tabindex=\"0\"\n      on:keydown={(k, e) => {\n        if (k.key == \"ArrowUp\") {\n          minOffset.set($minOffset + 1);\n        }\n        if (k.key == \"ArrowDown\") {\n          minOffset.set($minOffset - 1);\n        }\n      }}\n    >\n      {$minOffset}\n    </div>\n    <div\n      class=\"number\"\n      tabindex=\"0\"\n      on:keydown={(k, e) => {\n        if (k.key == \"ArrowUp\") {\n          secOffset.set($secOffset + 1);\n        }\n        if (k.key == \"ArrowDown\") {\n          secOffset.set($secOffset - 1);\n        }\n      }}\n    >\n      {$secOffset}\n    </div>\n    <div\n      class=\"number\"\n      tabindex=\"0\"\n      on:keydown={(k, e) => {\n        if (k.key == \"ArrowUp\") {\n          frameOffset.set($frameOffset + 1);\n        }\n        if (k.key == \"ArrowDown\") {\n          frameOffset.set($frameOffset - 1);\n        }\n      }}\n    >\n      {$frameOffset}\n    </div>\n  </div>\n  <div class=\"inputHolder\">\n    <div>HOUR</div>\n    <div>MIN</div>\n    <div>SEC</div>\n    <div>FRAME</div>\n  </div>\n</div>\n\n<style>\n  .inputHolder {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 6em;\n    padding-right: 6em;\n  }\n  .number {\n    font-size: 2em;\n    font-family: \"Roboto Mono\", monospace;\n    font-weight: bold;\n    color: white;\n    background-color: black;\n    border: none;\n    outline: none;\n    width: 2em;\n    text-align: center;\n    cursor: pointer;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAsBU,IAAI,AAAE,CAAC,AACb,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,KAAK,AACzB,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,IAAI,AACnB,CAAC;ACYD,UAAU,AAAC,CAAC,AACV,WAAW,CAAE,WAAW,CACxB,GAAG,CAAE,IAAI,2CAA2C,CAAC,AACvD,CAAC,AACD,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,WAAW,CAAE,aAAa,CAAC,CAAC,SAAS,AACvC,CAAC;ACwCD,YAAY,eAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,aAAa,CAAC,CAAC,SAAS,CACrC,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,KAAK,CACvB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,OAAO,AACjB,CAAC"
}